### Alternative Workflow for using NIAPS 2023 data in RLE assessments for Criterion D3

Date: 20250131

Author: A.L. Skowno

This workflow uses new data on invasive alien plant species distribution and abundance to assess the severity and extent of functional decline of terrestrial ecosystems in South Africa (to support application of Criterion D of the Red List of Ecosystems v1.1).

The National Invasive Alien Plant Survey (NIAPS) run by the Department of Forestry, Fisheries and the Environment and Stellenbosch University (led by Dr Ian Kotze and Andrew Wanneburg), resulted in a series of raster datasets on distribution and abundance of selected taxa that are combined with national land cover and vegetation data to calculate the proportional invaded per ecosystem type (vegetation unit).

```{r}
#load packages  
library(terra) 
library(tidyverse)
library(sf)
library(PROJ)
```

### Data sources & import:

1.  South African National Land Cover data set for 2022 (prepared by the National Department of Forestry, Fisheries and the Environment) were adjusted to have a common raster resolution (20m). The data were reclassified in ARCGIS PRO into seven classes: 1 = Natural; 2 = Secondary Natural, 3 = Artificial water bodies, 4 = Built up, 5 = Croplands, 6 = Mines, 7 = Plantation (SANBI pers com).

2.  National Vegetation Map 2024 version, vector data (ESRI file geodatabase) January 2025 curated by SANBI [@rutherford2006; @Dayaram2019].

3.  National Invasive Alien Plant Survey (NIAPS) (Kotze 2023) estimated the extent of the most-widespread & abundant, terrestrial invasive alien plant taxa (approx. 32 species) in South Africa. Data were downloaded from an ARCPRO package available here <https://dffeportal.environment.gov.za/portal/home/item.html?id=17de13c509ef4d3caf279d84e77312c3>. The data excludes invasions in transformed areas (i.e. cultivated, built-up & planted forest). Â Each raster has pixel values (0-100) that are percentage of area invaded divided by condensed area invaded for 32 Invasive plant taxa organised into 13 rasters. Values of 100 represent 100% invasion (effectively 100% canopy cover of the specific invasive species)(see **Marais et al., 200**4 for explanation of the concept of "condensed area").

```{r}
#Add land cover data  (note all LC products use  WGS84 Albers Equal Area, central meridian = 25; std parallel1 = -24; std parallel2 = -33). Use Tif version as this is processed faster by R terra.
lc2022 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2022_7class.tif")

# Add vegetation data
veg <- vect("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/NLC_Change.gdb", "NVM2024Final_IEM5_12_07012025")  #ensure it uses proj =  wgs84 aea cm 25 -24 -33

# to help differentiate masked areas (LES and SWA) from NON TERRESTRIAL areas add "NOTVEG" to T_MAPCODE where T_NAME = "Non-Terrestrial*"
veg$T_MAPCODE <- ifelse(veg$T_Name == "Non-terrestrial (estuarine habitat)" | veg$T_Name == "Non-terrestrial (Aquatic)", "NOTVEG", veg$T_MAPCODE) 
vegrast <- rasterize(veg,lc2022,"T_MAPCODE")

```

Alternative approach using NIAPs data prepared in ARCGIS PRO as R import and summary may be causing a problem in results. The ARCGIS pro steps were: sum rasters, make vector, project, make raster. Each raster in the NIAPS dataset has values of 0-100, where 100 represents 100% invasive species canopy cover. Summing the rasters results in an overall invasive value for each pixel. Pixels with summed values greater than 100 are considered 100% invaded. The summed results are then binned into 10 invasion classes. To proceed with analysis the summed invasive raster is then resampled to match the extent of the landcover data and vegetation data.

```{r}
# load niaps summary raster built in ARCGIS. This produces more sensible results in line with expectations. But source of divergence between ARC and R processing of summary raster  not clear. 

niaps_arc <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/Kotze_National_2024/data/commondata/raster_data/niaps_arc.tif") 

# resample to match extent of the land cover to allow for crosstabulation
niaps_arc <- resample(niaps_arc, lc2022, method = "near") 

# Define reclassification bins - each row represents: [min, max, new_value]
reclass_niaps <- matrix(c(
  0, 1 , 0,
  1, 10, 1,
  10, 20, 2,
  20, 30, 3,
  30, 40, 4,
  40, 50, 5, 
  50, 60, 6, 
  60, 70, 7, 
  70, 80, 8, 
  80, 90, 9, 
  90, 200, 10
), ncol = 3, byrow = TRUE)

# Reclassify the summed invasives data using the matrix
niaps_arc_rc <- classify(niaps_arc, rcl = reclass_niaps)

```

#### Spatial Analysis

Cross tabulate (R, terra) land cover (nlc2022_7class), NIAPS summed values for all taxa, and vegetation type rasters. Produce a summary table.

```{r}
#Crosstabulate invasives, land cover and vegetation data 
#Convert raw output values to a tibble
niaps_lc_veg_arc <- crosstab(c(lc2022,vegrast,niaps_arc_rc), useNA=TRUE) #ensure NA areas included
niaps_lc_veg_arc_values <- as_tibble(niaps_lc_veg_arc) #save raw crosstab outputs
write.csv(niaps_lc_veg_arc_values, file = "outputs/niaps_lc_veg_arc_values.csv") 

#load values to avoid rerunning time consumming cross tab above
#niaps_lc_veg_arc_values <- read_csv("outputs/niaps_lc_veg_arc_values.csv", show_col_types = FALSE)

#Rename columns and add km2 (cell size is 20x20m), and make adjustments to values as required
niaps_lc_veg_arc_tb <- niaps_lc_veg_arc_values %>%
    rename(LC = nlc2022_7class) %>%
  mutate(km2 = (n*400)/1000000) %>% # add extent 20x20m pixels
  mutate(niaps_arc = ifelse(niaps_arc == "NaN", 0, niaps_arc)) %>% # make NaN = 0 (allows as.integer later)
  filter(n !=0, T_MAPCODE != "NOTVEG") %>%
  mutate(LC = as.integer(LC), niaps_arc = as.integer(niaps_arc)) #IMPORTANT to make integers othewise ifelse does not work correctly below!

# # write output to csv for excel use
write.csv(niaps_lc_veg_arc_tb, file = "outputs/niaps_lc_veg_arc_tb.csv")
```

#### Tabular Analysis

Calculate key metrics of invasion for each vegetation type. Experiment with the how NIAPS values relate to severity of biotic disruption (values in NIAPS are condensed ha / total ha, similar to % canopy cover metrics).

Test case: Where summed values are greater than 60 in NIAPS rasters then assume 90% severity, values over 40 assume 70% severity, values over 20 assume 50% severity of biotic disruption.

```{r}
options(scipen = 999) #supress scientific notation

#prepare basic metrics on vegetation types
vegrem_extent_in_sa <- niaps_lc_veg_arc_tb %>% #remaining extent of each type
  filter(LC == 1) %>%  
  group_by(T_MAPCODE) %>%
  summarise(sum_rem = sum(km2))
  
# Experiment with the how NIAPS values relate to severity of biotic disruption
niaps_veg_sum <- niaps_lc_veg_arc_tb %>%
   filter(LC == 1) %>% # ensure only natural remnants included
  #adjust the case when as required... 
  mutate(niaps_sev = case_when(niaps_arc > 6 ~ 90,
                                  niaps_arc > 4 ~ 70,
                                  niaps_arc > 2 ~ 50, TRUE ~ 0)) %>%
  filter(niaps_sev != 0) %>%  # simplify by removing non invaded
  group_by(T_MAPCODE, niaps_sev) %>%
  summarise(km2_inv = sum(km2)) %>%
  arrange(desc(niaps_sev)) %>%  # ensure values are ordered descending for cumsum
  mutate(km2_inv_cum = cumsum(km2_inv)) %>% # ensure cumulative sum of niaps_sev
  inner_join(vegrem_extent_in_sa, by = "T_MAPCODE") %>%
  mutate(niaps_ext = km2_inv_cum/sum_rem) %>% 
    select(-km2_inv,-km2_inv_cum ,-sum_rem) %>%
    pivot_wider(names_from = niaps_sev, 
              values_from = niaps_ext, 
              names_prefix = "niaps_ext", 
              values_fill = list(niaps_ext = 0)) %>%
  mutate(YEAR = 2023)


#----------------------------------------------------------------------------
# Experiment with the how NIAPS values relate to severity of biotic disruption
niaps_veg_sum2 <- niaps_lc_veg_arc_tb %>%
  filter(LC == 1, sum_niaps !=0) %>% # ensure only natural remnants included
  group_by(T_MAPCODE, sum_niaps)  %>%
  summarise(km2_inv = sum(km2)) %>%
  arrange(desc(sum_niaps)) %>%  # ensure values are ordered descending for cumsum
  mutate(km2_cum = cumsum(km2)) %>% # ensure cumulative sum of niaps_sev
  inner_join(vegrem_extent_in_sa, by = "T_MAPCODE") %>%
  mutate(niaps_ext = km2_inv_cum/sum_rem) %>% 
    select(-km2_inv,-km2_inv_cum ,-sum_rem) %>%
    pivot_wider(names_from = niaps_sev, 
              values_from = niaps_ext, 
              names_prefix = "niaps_ext", 
              values_fill = list(niaps_ext = 0)) %>%
  mutate(YEAR = 2023)













#write to a csv for use in RLE analysis
write.csv(niaps_veg_sum, file = "outputs/rle_data_niaps.csv") 

niaps_veg_sum_rle <- niaps_veg_sum %>%
  mutate(D3 = case_when(niaps_ext90 >= 0.9 ~ "CR",
                        niaps_ext90 >= 0.7 | niaps_ext70 >= 0.9 ~ "EN",
                        niaps_ext90 >= 0.5 | niaps_ext70 >= 0.7 | 
                        niaps_ext50 >= 90 ~ "VU",
                        TRUE ~ "LC"))

#  write output to csv for excel use
write.csv(inv_veg_sum_results, file = "outputs/rle_data_niaps_D3.csv") 

```
