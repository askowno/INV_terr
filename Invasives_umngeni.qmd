---
title: "RLE terrestial 2025 - B and D1 assessment using unMngeni IAP data"
bibliography: references.bib
lang: en-GB
---

### Overview of analysis:

Exploring invasive alien plant data for the uMngei Catchment for use in terrestrial Red List of Ecosystems - a component of the National Biodiversity Assessment 2025.

The extent and severity of invasive alien plant invasions can be used as a confirmation of "ongoing decline" in IUCN RLE 1.1 Criteria B1 and B2 assessments (restricted distribution), and in Criterion D assessment of functional declines (biotic disruption). Criterion D1 was applied (disruption in the last 50 years). The approach followed was to cross tabulate South Africa's national vegetation map (version 2024) (SANBI, 2025) and data from the EI4WS project covering the uMngeni catchment area developed by the Institute of Natural Resources and GeoNest (Pty) Ltd. in a collaboration between uMngeni-uThukela Water and the South African National Biodiversity Institute (SANBI) (Institute of Natural Resources 2024). The severity of biotic disruption in pixels identified as invaded is estimated to be \>80%. Non natural areas (croplands, old fields, built up areas , mines, dams and plantations) were masked out of the analysis, and only natural remaining vegetation patches were assessed as to their extent of invasion within the area of interest.

```{r}

#load packages  
library(terra) 
library(tidyverse)
library(sf)
library(PROJ)
```

### Data sources & import:

1.  South African National Land Cover data set for 2022 (prepared by the National Department of Forestry, Fisheries and the Environment) were adjusted to have a common raster resolution (20m). The data were reclassified in ARCGIS PRO into seven classes: 1 = Natural; 2 = Secondary Natural, 3 = Artificial water bodies, 4 = Built up, 5 = Croplands, 6 = Mines, 7 = Plantation (SANBI pers com).

2.  National Vegetation Map 2024 version, vector data (ESRI file geodatabase) January 2025 curated by SANBI ([@Dayaram2019])

3.  Map of key invasive alien plant taxa within uMngeni catchment areas collected as part of the EI4WS project (INR, 2024). The data were pre processed in ARCGIS PRO. The data were in vector format (.gdb) and the density (in percentage cover) of IAP per planning unit (a polygon built using a segmentation algorithm) were split across multiple fields; dominant, secondary, tertiary. In addition the density of invasives from Holden et al was included as a field in the dataset, also as a percentage cover. From these fields the polygons were classified as follows. All polygons for which the dominant IAP, secondary IAP tertiary IAP summed to over 50% were given the value = 8. All polygons for which the Holden data indicated \>50% IAP density were also given the value = 8. Other polygons were given value = 0. The vector data was converted to raster snapped to the 7 class national land cover at 20m and using Alber Equal Area projection and nodata was assigned value = 0. The assumption is that for all IAP data when density (condensed area or canopy cover) are over 50%, the severity of biotic disruption can be set to \>70%.

```{r}
#add invasive data : 
um <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/BergBreede_uMngeni/um4.tif")

#Add land cover data  (note all LC products use  WGS84 Albers Equal Area, central meridian = 25; std parallel1 = -24; std parallel2 = -33). Use Tif version as this is processed faster by R terra.
lc2022 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2022_7class.tif")


# add vegetation data
veg <- vect("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/NLC_Change.gdb", "NVM2024Final_IEM5_12_07012025")  #ensure it uses proj =  wgs84 aea cm 25 -24 -33

# to help differentiate masked areas (LES and SWA) from NON TERRESTRIAL areas add "NOTVEG" to T_MAPCODE where T_NAME = "Non-Terrestrial*"
veg$T_MAPCODE <- ifelse(veg$T_Name == "Non-terrestrial (estuarine habitat)" | veg$T_Name == "Non-terrestrial (Aquatic)", "NOTVEG", veg$T_MAPCODE) 
vegrast <- rasterize(veg,lc2022,"T_MAPCODE")

# ensure extents match 
um <- resample(um, lc2022, method = "near")

# load EOO and AOO for Criterion B assessment (ongoing decline)
eoo <- read_csv("C:/Rdata/RLE_terr/outputs/EOO_AOO_from_redlistr.csv")
```

### Spatial Analysis

Cross tabulate the land cover, vegetation and invasive data to produce a value matrix - then convert this to a tibble (tidy table). Add extent (km2) based on pixel counts (pixels are 20mx20m). Add vegetation information (Biome, Name and full extent) to the table.

```{r}
#Crosstabulate invasives, land cover and vegegation data 
#Convert raw output values to a tibble
um_values <- crosstab(c(lc,vegrast,um), useNA=TRUE) #ensure NA areas included
um_values <- as_tibble(um_values) #save raw crosstab outputs
write.csv(um_values, file = "outputs/um_values.csv") 

#--------------------------------------------------------------------
#--------------------------------------------------------------------
# Start here: load values to avoid rerunning time consuming cross tab above

#um_values <- read_csv("outputs/um_values.csv", show_col_types = FALSE)

#Rename columns and add km2 (cell size is 10x10m), and make adjustments to values as required
um_tb <- um_values %>%
  mutate(km2 = (n*400)/1000000) %>% # add extent 10x10m pixels
  #check the 
  mutate(um = ifelse(um4 == "NaN", 0, um4)) %>% # make NaN = 0 (allows as.integer later)
  rename(LC = nlc2022_7class) %>%
  filter(n != 0, T_MAPCODE != "NOTVEG", !is.na(LC)) %>%
  mutate(LC = as.integer(LC), um = as.integer(um)) %>% #IMPORTANT to make integers othewise ifelse does not work correctly below!
  select(-um4)

# # write output to csv for excel use
write.csv(um_tb, file = "outputs/um_tb.csv") 

```

### Summary statistics

The extent of invasive alien plants within each ecosystem type is then expressed as a proportion. This proportion together with an estimation of the Relative Severity of biotic disruption from the invasion allows for the application of Criterion D of the Red List of Ecosystems. The remote sensing approach used suggests that areas must have high density of alien plants to be classified as invaded, so it is reasonable to assume pixels coded as invaded have a high relative severity of disruption (\~80%). If the majority of the invasion is though to have occurred within the last 50 years then Criterion D1 should be applied.

|                              |               |               |               |
|------------------------------|---------------|---------------|---------------|
| Criterion D1                 | \>=80% extent | \>=50% extent | \>=30% extent |
| **\>=80% relative severity** | **CR**        | **EN**        | **VU**        |
| \>=50% relative severity     | EN            | VU            |               |
| \>=30% relative severity     | VU            |               |               |

```{r}
options(scipen = 999)
# Calculate the the extent of IAT per vegetation unit, but only where : landcover is natural (LC = 1) and invasives have been recorded (IAT =1).

veg_extent_in_sa <- um_tb %>% # extent of each type in sa
  group_by(T_MAPCODE) %>%
  summarise(sum_sa = sum(km2))

vegrem_extent_in_sa <- um_tb %>% # remaining natural extent in sa
  filter( LC == 1) %>% 
  group_by(T_MAPCODE) %>%
  summarise(sumrem_sa = sum(km2))
  
veg_extent_in_aoi <- um_tb %>% #full extent in aoi
  filter(um < 99) %>%  
  group_by(T_MAPCODE) %>%
  summarise(sum_aoi = sum(km2))


 
# identify invaded areas, then summarise and work out prop  invaded. 

um_sum <- um_tb %>%
  mutate(inv_deg = ifelse(um == 8 & LC ==1,1,0)) %>%  # count only invasion in natural veg
       group_by(T_MAPCODE, inv_deg) %>%
  summarise(sum_IAP = sum(km2)) %>%
  filter(inv_deg  == 1) %>%
  left_join(vegrem_extent_in_sa, by = "T_MAPCODE") %>%
  left_join(veg_extent_in_aoi, by ="T_MAPCODE") %>%
  left_join(veg_extent_in_sa, by = "T_MAPCODE") %>% # from niaps workflow
  mutate(prop_in_aoi = sum_aoi/sum_sa) %>% # check how much of type is in AOI
  mutate(prop_inv = sum_IAP/sumrem_sa) %>%
  mutate(D1_um = case_when(prop_inv >= 0.8 ~ "CR",
                   prop_inv >= 0.5 ~ "EN",
                   prop_inv >= 0.3 ~ "VU",
                  TRUE ~ "LC")) %>%
  left_join(eoo, "T_MAPCODE") %>%
  mutate(B1i_um = case_when(EOO <= 2000 & prop_inv >= 0.3 ~ "CR", 
                                  EOO <= 20000 & prop_inv >= 0.3 ~ "EN", 
                                  EOO <= 50000 & prop_inv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC")) %>%
  mutate(B2i_um = case_when(AOO <= 2 & prop_inv >= 0.3 ~ "CR", 
                                  AOO <= 20 & prop_inv >= 0.3 ~ "EN", 
                                  AOO <= 50 & prop_inv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC"))

#  write output to csv to hand over to RLE assessment (in the next step the proportion of each ecosystem )
write.csv(um_sum, file = "outputs/data_for_rle_um.csv") 

```
