---
title: "Combined invasive alien plant layers for the NBA 2025"
bibliography: references.bib
lang: en-GB
---

### Overview of analysis:

This workflow combines invasive alien plant data from various sources into a single raster coverage. This will be used as an additional input layer in updated Red List of Threatened Plant and Amphibian assessments, terrestrial Red List of Ecosystems and terrestrial Ecosystem Protection Level Assessments for the National Biodiversity Assessment 2025.

#### Data sources:

1.  Map of woody invasive alien plant taxa within the Cape Floristic Region. This classification was generated using Sentinel-2 satellite imagery at a 10 m resolution using a Random Forest machine learning classifier. The data is unprocessed and contain certainty information in Band 2 (values of 0-100) ([@rebelo]). The data were prepossessed in ARCGIS PRO: Band one and two were combined such that only pixels with greater than 50% certainty were used, and all invasive species classes were recoded to value = 8. Non invaded areas were coded value = 0. areas outside of AOI were coded value = 99. The data were resampled from 10m to 20m pixels and snapped to the land cover 2022 7 class grid. Projection set to Albers Equal Area Conic CM: 25, STDP1: -24, STDP2: -33, WGS84.

2.  Map of key invasive alien plant taxa within Mzimvubu, Tugela, Sabie-Crocodile and Luvuvhu catchment areas collected as part of the MAPWAPS program ([@skosana], [@cogill], @skosanaa\], [@cogilla] ). This classification was generated using Sentinel-2 satellite imagery at a 10 m resolution using a Gradient Tree Boost (GTB) classification. The data were pre processed in ARCGIS PRO, where an attribute \[mapwaps\] was added to each data set. Where LUCL = Alien\* the value 8 was assigned, otherwise the value 0. This allows for determination of invaded areas and other areas within the area of interest. The shapefiles for Luvuhvu and and Sabie-Crocodile were projected from UTM36S to UTM35S, and then all four were merged into a single shapefile mapwaps.shp. this was then rasterized (using mapwaps attribute) and snapped to the national land cover grid 2022. Projection set to Albers Equal Area Conic CM: 25, STDP1: -24, STDP2: -33, WGS84.

3.  National Invasive Alien Plant Survey (NIAPS) ([@kotzÃ©2025]) estimated the extent of the most-widespread & abundant, terrestrial invasive alien plant taxa (approx. 32 species) in South Africa. Data were downloaded from an ARCPRO package available [here](https://dffeportal.environment.gov.za/portal/home/item.html?id=17de13c509ef4d3caf279d84e77312c3). The data excludes invasions in transformed areas (i.e. cultivated, built-up & planted forest). Each raster has pixel values (0-100) that are percentage of area invaded divided by condensed area invaded for 32 Invasive plant taxa organised into 13 rasters. Values of 100 represent 100% invasion (effectively 100% canopy cover of the specific invasive species)(see [@marais2004] for explanation of the concept of "condensed area"). The data were prepossessed in ARCGIS PRO: All rasters were combined using a sum, pixels with values \> 50 were recoded to value = 8, those then than 50% were coded value = 0. The data were resampled from decimal degrees to 20m pixels and snapped to the land cover 2022 7 class grid. Projection set to Albers Equal Area Conic CM: 25, STDP1: -24, STDP2: -33, WGS84.

4.  uMngeni and Berg-Breede Catchment IAPS data ADD background summary and references

5.  National Land Cover 7 class 2022.

6.  National Vegetation Map 2024 version, vector data (ESRI file geodatabase) January 2025 curated by SANBI ([@Dayaram2019])

#### Analysis and outputs:

The four IAP rasters were combined in two ways:

1.  A maximum approach: Any pixel of value = 8 (invaded) was retained and all other pixels were assigned value = 0 (not invaded) to produce a **inv_comb_max.tif** raster. This data does not take into account the existing land cover, and invasions with in secondary natural areas and urban area are retained.
2.  A strict approach: Where pixels from overlapping layers did not agree on presence of IAP (particularly in the Western Cape where three datasets are avilable) then the pixel is not assigned the value = 8. Thisproduced the **inv_comb_strict.tif** raster. This approach results in fewer pixels being identified as invaded when compared tot he maximum approach. As such it can be considered to have higher confidence. This data does not take into account the existing land cover, and invasions with in secondary natural areas and urban area are retained.

These combined invasion rasters were combined with the 7 class national land cover 2022 such that if land cover Value = 1 (natural) and the combined invasion layer Value = 8 (invaded) then the output pixel value is = 8. If not then the land cover value was assigned. This results in a 8 class national land cover : 1 = natural, 2 = secondary natural(old fields), 3 = artificial water bodies, 4 = built up (infrastructure), 5 = croplands and orchards, 6 = mines and mine dumps, 7 = plantation forestry, 8 = invasive alien plant (high density).

Using the "Max" approach the output is a raster **lc2022_inv_max.tif,** and using the "Strict" approach the output raster is a raster **lc2022_inv_strict.tif**

These two land cover data sets were individually cross tabulated with the national vegetation map to allow the percentage invasion per type to be calculated. From this the RLE criteria were then applied.

#### Results:

The results of the maximum combination: [INV_terr/outputs/data_for_rle_inv_max.csv](INV_terr/outputs/data_for_rle_inv_max.csv)

The results of the strict combination: [INV_terr/outputs/data_for_rle_inv_strict.csv](INV_terr/outputs/data_for_rle_inv_strict.csv)

```{r}
#load packages  
library(terra) 
library(tidyverse)
library(sf)
library(PROJ)
```

```{r}
# Data Prep
#load niaps data - all species combined and using only pixels with > 50% condensed area (high canopy cover of iaps) 
niaps <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/Kotze_National_2024/data/niaps2.tif") 

#load Bioscape CFR data - all species combined and using only pixels with certainty > 50%
inv_cfr <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/Rebelo Invasives WC/inv_cert2.tif")  

#load MAPWAPS data - all species combined 
mapwaps <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/MAPWAPS/mapwaps2.tif")  

#load Umngeni Breede data - all species combined 
umbb <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/BergBreede_uMngeni/umngeni_breede.tif")  

# extra step required - resample as mapwaps and umbb didnt have same extent - dont know why as in ARCPRO they were snapped to the LC2022. 
mapwaps <- resample(mapwaps, niaps, method = "near" )
umbb <- resample(umbb, niaps, method = "near" )
```

```{r}
# COMBO 1 (MAX) Combine all IAP layers such that for overlappng layers agreement on presense of IAP is not required - all pixels that are labeled as IAP are kept. This results in a "maximum"  IAP map with lower confidence than a strict approach that requires overlapping pixels to all show presense of IAPs(the "strict" approach is applied in seperate script) 

# Create a single-layer mask where any raster has value = 8
has_8 <- sum(niaps == 8, inv_cfr == 8, mapwaps == 8, umbb == 8) > 0  

# Apply the ifel() operation
inv_comb_max <- ifel(has_8, 8, 0)

# write to disk
writeRaster(inv_comb_max, "C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/inv_comb_max.tif", datatype = "INT1U", gdal = c("COMPRESS=LZW"), overwrite = TRUE)

# load LC 2022
lc <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2022_7class.tif")

# combine the rasters such that if lc = 1  AND inv = 8 then value in new raster = 8, else use value of lc. This creates a 8 class land cover 1=nat, 2=secnat, 3=artwater, 4=built, 5=crop, 6=mine, 7=plant, 8=invaded

lc2022_inv_max <-  ifel(inv_comb_max == 8 & lc == 1, 8, lc)

writeRaster(lc2022_inv_max, "C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/lc2022_inv_max.tif", datatype = "INT1U", gdal = c("COMPRESS=LZW"), overwrite = TRUE)
```

```{r}
# COMBO 2 (Strict0 -  Alternative "conservative" version of the IAP combination layer - where overlapping layers (eg Berg-Breede, CFR and NIAPS must agree on presence of IAPs for the pixel to be assigned to the class (Value =8).

# Stack your rasters
rasters <- c(niaps, inv_cfr, mapwaps, umbb)

# Apply pixel-wise function using app(), not lapp() (change to strict in naming)
inv_comb_strict <- app(rasters, fun = function(v) {
  valid <- v[v != 99]
  if (length(valid) == 0) {
    return(0)  # No data from any layer
  } else if (all(valid == 8)) {
    return(8)  # All valid layers say "invaded"
  } else {
    return(0)  # Not all valid layers agree
  }
})


writeRaster(inv_comb_strict, "C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/inv_comb_strict.tif", datatype = "INT1U", gdal = c("COMPRESS=LZW"), overwrite = TRUE)

# Strict 8 class LC: combine the rasters such that if lc = 1  AND inv = 8 then value in new raster = 8, else use value of lc. This creates a 8 class land cover 1=nat, 2=secnat, 3=artwater, 4=built, 5=crop, 6=mine, 7=plant, 8=invaded

lc2022_inv_strict <-  ifel(inv_comb_strict == 8 & lc == 1, 8, lc)

writeRaster(lc2022_inv_strict, "C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/lc2022_inv_strict.tif", datatype = "INT1U", gdal = c("COMPRESS=LZW"), overwrite = TRUE)

```

```{r}
# add the vegetation data and EOO and AOO data  and prepare for cross tabulation

# add vegetation data
veg <- vect("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/NLC_Change.gdb", "NVM2024Final_IEM5_12_07012025")  #ensure it uses proj =  wgs84 aea cm 25 -24 -33

# to help differentiate masked areas (LES and SWA) from NON TERRESTRIAL areas add "NOTVEG" to T_MAPCODE where T_NAME = "Non-Terrestrial*"
veg$T_MAPCODE <- ifelse(veg$T_Name == "Non-terrestrial (estuarine habitat)" | veg$T_Name == "Non-terrestrial (Aquatic)", "NOTVEG", veg$T_MAPCODE) 
vegrast <- rasterize(veg,lc2022_inv_strict,"T_MAPCODE")

# load EOO and AOO for Criterion B assessment (ongoing decline)
eoo <- read_csv("C:/Rdata/RLE_terr/outputs/EOO_AOO_from_redlistr.csv")
```

```{r}
## Cross tabulate the 8 class land cover (which includes iaps) with the vegetation map to calculate key metrics for RLE (percent invasion per type). The key assumption is that since only high density invasions were included in the combined data sets (ie over 50% canopy cover) the severity of biotic disruption (required for use in Criterion D1 and D3) is assumed to be ~80% 

lc2022_inv_max <- rast("C:/Users/skownoa/Dropbox/NBAwork/RLEworking/Invasives/lc2022_inv_max.tif")  

#Crosstab veg and lc2022_inv_max
rall_inv_comb_max <- crosstab(c(lc2022_inv_max,vegrast), useNA=TRUE) #ensure NA areas included
rall_inv_comb_max <- as_tibble(rall_inv_comb_max) 
write.csv(rall_inv_comb_max, file = "outputs/rall_inv_max.csv") 

#Crosstab veg and lc2022_inv_strict
rall_inv_comb_strict <- crosstab(c(lc2022_inv_strict,vegrast), useNA=TRUE) #ensure NA areas included
rall_inv_comb_strict <- as_tibble(rall_inv_comb_strict)
write.csv(rall_inv_comb_strict, file = "outputs/rall_inv_strict.csv") 

```

```{r}
# Clean up and summarise tables
inv_max_tb <- rall_inv_comb_max %>%
  mutate(km2 = (n*400)/1000000) %>% # add extent 10x10m pixels
  rename(LC = nlc2022_7class) %>%
  filter(n != 0, T_MAPCODE != "NOTVEG", !is.na(LC), !is.na(LC), LC != "NaN") %>%
  select(-n) %>%
  mutate(LC = as.integer(LC)) #IMPORTANT to make integers othewise ifelse does not work correctly below!

inv_strict_tb <- rall_inv_comb_strict %>%
  mutate(km2 = (n*400)/1000000) %>% # add extent 10x10m pixels
  rename(LC = nlc2022_7class) %>%
  filter(n != 0, T_MAPCODE != "NOTVEG", !is.na(LC), !is.na(LC), LC != "NaN") %>%
  select(-n) %>%
  mutate(LC = as.integer(LC)) #IMPORTANT to make integers othewise ifelse does not work correctly below!

inv_max_sum <- inv_max_tb %>%
  pivot_wider(names_from = LC, 
              values_from = km2, 
              names_prefix = "lc_", 
              values_fill = list(km2 = 0)) %>%
  relocate(lc_7, .before =lc_8) %>%
  mutate(ext_tot = rowSums(select(., lc_1:lc_8), na.rm = TRUE)) %>%
  mutate(ext_rem = lc_1 + lc_8) %>%
  mutate(ext_reminv = lc_8/ext_rem) %>%
   left_join(eoo, "T_MAPCODE") %>%
  mutate(B1i_invmax = case_when(EOO <= 2000 & ext_reminv >= 0.3 ~ "CR", 
                                  EOO <= 20000 & ext_reminv >= 0.3 ~ "EN", 
                                  EOO <= 50000 & ext_reminv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC")) %>%
  mutate(B2i_invmax = case_when(AOO <= 2 & ext_reminv >= 0.3 ~ "CR", 
                                  AOO <= 20 & ext_reminv >= 0.3 ~ "EN", 
                                  AOO <= 50 & ext_reminv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC")) %>%
  mutate(D1_invmax = case_when(ext_reminv >= 0.8 ~ "CR",
                   ext_reminv >= 0.5 ~ "EN",
                   ext_reminv >= 0.3 ~ "VU",
                  TRUE ~ "LC")) %>%
  mutate(D3_invmax = case_when(ext_reminv >= 0.9 ~ "CR",
                   ext_reminv >= 0.7 ~ "EN",
                   ext_reminv >= 0.5 ~ "VU",
                  TRUE ~ "LC"))
  
# Summarise STRICT invasives and assess Criterion B and D
inv_strict_sum <- inv_strict_tb %>%
  pivot_wider(names_from = LC, 
              values_from = km2, 
              names_prefix = "lc_", 
              values_fill = list(km2 = 0)) %>%
  relocate(lc_7, .before =lc_8) %>%
  mutate(ext_tot = rowSums(select(., lc_1:lc_8), na.rm = TRUE)) %>%
  mutate(ext_rem = lc_1 + lc_8) %>%
  mutate(ext_reminv = lc_8/ext_rem) %>%
   left_join(eoo, "T_MAPCODE") %>%
  mutate(B1i_invstrict = case_when(EOO <= 2000 & ext_reminv >= 0.3 ~ "CR", 
                                  EOO <= 20000 & ext_reminv >= 0.3 ~ "EN", 
                                  EOO <= 50000 & ext_reminv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC")) %>%
  mutate(B2i_invstrict = case_when(AOO <= 2 & ext_reminv >= 0.3 ~ "CR", 
                                  AOO <= 20 & ext_reminv >= 0.3 ~ "EN", 
                                  AOO <= 50 & ext_reminv >= 0.3 ~ "VU", 
                                  TRUE ~ "LC")) %>%
  mutate(D1_invstrict = case_when(ext_reminv >= 0.8 ~ "CR",
                   ext_reminv >= 0.5 ~ "EN",
                   ext_reminv >= 0.3 ~ "VU",
                  TRUE ~ "LC")) %>%
  mutate(D3_invstrict = case_when(ext_reminv >= 0.9 ~ "CR",
                   ext_reminv >= 0.7 ~ "EN",
                   ext_reminv >= 0.5 ~ "VU",
                  TRUE ~ "LC"))
# Write results  
 write.csv(inv_max_sum, file = "outputs/data_for_rle_inv_max.csv") 
 write.csv(inv_strict_sum, file = "outputs/data_for_rle_inv_strict.csv") 
```
